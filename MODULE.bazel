module(
    name = "bazel_rules_nvc",
    version = "0.0.1",
)

bazel_dep(name = "gotopt2", version = "2.2.2")
bazel_dep(name = "rules_foreign_cc", version = "0.15.1")
bazel_dep(name = "bazel_skylib", version = "1.8.1")
bazel_dep(name = "platforms", version = "1.0.0")
bazel_dep(name = "rules_cc", version = "0.2.8")
bazel_dep(name = "libffi", version = "3.4.7.bcr.3")
bazel_dep(name = "zstd", version = "1.5.7")
bazel_dep(name = "elfutils", version = "0.1.1")


bazel_dep(name = "gcc_toolchain", version = "0.9.0", dev_dependency = True)
gcc_toolchains = use_extension(
    "@gcc_toolchain//toolchain:module_extensions.bzl",
    "gcc_toolchains",
    dev_dependency = True)
[
    [
        gcc_toolchains.toolchain(
            name = "gcc_toolchain_{}".format(arch),
            target_arch = arch,
        ),
        use_repo(gcc_toolchains, "gcc_toolchain_{}".format(arch)),
        register_toolchains(
            "@gcc_toolchain_{}//:cc_toolchain".format(arch),
            "@gcc_toolchain_{}//:fortran_toolchain".format(arch),
            dev_dependency = True,
        ),
    ]
    for arch in [
        #"aarch64",
        #"armv7",
        "x86_64",
    ]
]
#bazel_dep(name = "hermetic_cc_toolchain", version = "3.1.0")
#toolchains = use_extension("@hermetic_cc_toolchain//toolchain:ext.bzl", "toolchains")
#use_repo(toolchains, "zig_sdk")
#register_toolchains(
    #"@zig_sdk//toolchain/...",
    #"@zig_sdk//libc_aware/toolchain/...",
#)


http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
http_archive(
    name = "nvc",
    build_file = "@//third_party/nvc:nvc.BUILD.bazel",
    patch_args = ["-p1"],
    sha256 = "192fe81768d76d90ea005dcde1ad997ec5220a5b84103c763f39758f12cbb4a3",
    strip_prefix = "nvc-1.11.0",
    urls = [
        "https://github.com/nickg/nvc/releases/download/r1.11.0/nvc-1.11.0.tar.gz",
    ],
)
register_toolchains("//build/nvc:nvc_linux_toolchain")


third_party_ext = use_extension("//third_party:repositories.bzl", "extension")
use_repo(third_party_ext, "flex", "m4", "zlib")

